spring:
  
  data:
    redis:
      host: prod.redis
      port: 6379
      password:
  
  session:
    timeout: 1800
    redis:
      flush-mode: immediate
      save-mode: on-set-attribute
      namespace: spring
  
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ENC(cpZD5XJ5EXchMS6jX0gKk6WLfnpEBEwBCJYspWAsycX/hgRdxHQXN4wtK5cA9LAOICMa5k9/WZ+xbZ6DHhQjE5i5UilXIMg5npLADOIvChr4W7eUm86nWA==)
            client-secret: ENC(M/BnqB+EztAcmVtM/tE4jSZxCJ3xmsFC/gq5E85nLfmL3CS7NxY7jc54Q7Q464rq)
            scope:
              - email
              - profile
          kakao:
            client-id: ENC(maddnuS4JXLmq8q8v4LW/UdlkHFRCDY9xwIqin2Zinc8Qs1i6r4zP8x0GNH1Yi3a)
            client-secret: ENC(/zvpRLcEFigr7b1x2G254x/8ouqa5ydJkzYg5lPdCNlY9hsxNfeYzXYCYCHHdhkD)
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: client_secret_post
          naver:
            client-id: ENC(BJ2aqEAOMGYq/qF+zu2lnJYlTaThYZYZxCpI9fZAx9Q=)
            client-secret: ENC(43aTmZzJp6aOLtCMPKXmXrcpWBX56Gkd)
            scope: nickname, email, gender, age, profile_image
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

framework:

  webmvc:
    
    tomcat:
      enable: true
      port: 8180
      valve:
        access-log:
          directory: "/logs/auth"
          prefix: "auth-access"
          suffix: ".log"
          rotatable: false
          pattern: "%{X-Forwarded-For}i %h %l %u %t \"%{Referer}i\" \"%r\" %s %b"
  
  database:
    datasource:
      driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
      jdbc-url: jdbc:log4jdbc:mariadb://prod.mariadb-develop:3306/develop
      username: ENC(FLiAeH0GVhyHRuVqNjGdXg==)
      password: ENC(9h/mZPfbjcDzylQmFUgznA==)
      maximum-pool-size: 3
      minimum-idle: 2
      connection-timeout: 250
      initialization-fail-timeout: 0

    mybatis:
      config-file: classpath:mybatis.xml
      mapper-location: classpath*:mybatis/**/*.xml
    
    jpa:
      generate-ddl: true
      show-sql: false
      properties:
        hibernate:
          hbm2ddl.auto: update     # none update create create-drop
          dialect: org.hibernate.dialect.MariaDBDialect
          physical_naming_strategy: spring.framework.database.jpa.ImprovedNamingStrategy

  kafka:
    bootstrap-servers: prod.cp-kafka:9092
    group-id: market-app
    auto-offset-reset: earliest

