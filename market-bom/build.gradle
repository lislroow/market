plugins {
  id 'java-platform'
  id 'maven-publish'
}

ext {
  dependencyRepos = {
    maven { url = uri('https://repo.maven.apache.org/maven2/') }
    maven { url = uri('https://nexus.mgkim.net/repository/maven-public/') }
    mavenLocal()
  }
  
  publishingRepos = {
    maven {
      url = "https://nexus.mgkim.net/repository/maven-${rootProject.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}/"
      credentials {
        username = findProperty('nexusUsername') ?: System.getenv('NEXUS_USERNAME')
        password = findProperty('nexusPassword') ?: System.getenv('NEXUS_PASSWORD')
      }
    }
  }
  
  publishingPom = {
    name = project.name
    description = 'market-bom'
    url = 'http://lislroow.github.io'
    licenses {
      license {
        name = 'The Apache License, Version 2.0'
        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
      }
    }
    developers {
      developer {
        id = 'lislroow'
        name = 'KIM MYEONGGU'
        email = 'lislroow@daum.net'
      }
    }
    scm {
      connection = 'git@github.com:lislroow/market.git'
      developerConnection = 'git@github.com:lislroow/market.git'
      url = 'https://github.com/lislroow/market'
    }
  }
  
  java_version = 17
  
  spring_boot_version = '3.3.3'
  spring_cloud_version = '2023.0.3'
}

group = 'spring.app'
version = '0.1-SNAPSHOT'

repositories dependencyRepos

dependencies {
  constraints {
    platform "org.springframework.boot:spring-boot-dependencies:${spring_boot_version}"
    platform "org.springframework.cloud:spring-cloud-dependencies:${spring_cloud_version}"
  }
}

javaPlatform {
  allowDependencies()
}

publishing {
  repositories publishingRepos
  publications {
    mavenBom(MavenPublication) {
      from components.javaPlatform
      pom publishingPom
    }
  }
}

subprojects {
  apply plugin: 'java'
  
  // TODO toolchain 방식 확인
  //java {
  //  toolchain {
  //    languageVersion = JavaLanguageVersion.of(java_version)
  //  }
  //}
  java {
    sourceCompatibility = java_version.toString()
    targetCompatibility = java_version.toString()
  }
  
  repositories dependencyRepos
}

// TODO toolchain 방식 확인
//gradle.toolchains {
//  jvm {
//    javaVersion = JavaLanguageVersion.of(java_version)
//    vendor = JvmVendorSpec.ADOPTIUM
//  }
//}

